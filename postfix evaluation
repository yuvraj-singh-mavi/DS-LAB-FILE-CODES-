#include<stdio.h>
#include<string.h>
#include<ctype.h> 

int top = -1, stack[100];

void push(int n);
int pop();
int eval(char ch, int op1, int op2);

int main() {
    char a[50], ch;
    int i, op1, op2, res, x;
    
    printf("Enter a postfix expression: ");
    fgets(a, sizeof(a), stdin);  
    a[strcspn(a, "\n")] = 0;

    for(i = 0; a[i] != '\0'; i++) {
        ch = a[i];

        if (isdigit(ch)) {
            
            push(ch - '0');
        } else if (ch == ' ' || ch == '\t') {
            
            continue;
        } else {
            
            op1 = pop();
            res = eval(ch, op1, op2);
            push(res);
        }
    }

    x = pop();
    printf("Evaluated value = %d\n", x);

    return 0;
}

void push(int n) {
    top++;
    stack[top] = n;
}

int pop() {
    if (top == -1) {
        printf("Error: Stack underflow\n");
        return -1; 
    }
    int res = stack[top];
    top--;
    return res;
}

int eval(char ch, int op1, int op2) {
    switch (ch) {
        case '+': return op1 + op2;
        case '-': return op1 - op2;
        case '*': return op1 * op2;
        case '/': 
            if (op2 != 0) {
                return op1 / op2;
            } else {
                printf("Error: Division by zero\n");
                return 0;
            }
        default:
            printf("Error: Invalid operator %c\n", ch);
            return 0;
    }
}
