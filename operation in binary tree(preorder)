#include <stdio.h>
#include <stdlib.h>

struct node {
    int item;
    struct node* left;
    struct node* right;
};
struct node* createnode(int value) {
    struct node* newNode = malloc(sizeof(struct node));
    newNode->item = value;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}


struct node* insertLeft(struct node* root, int value) {
    root->left = createnode(value);
    return root->left;
}
struct node* insertRight(struct node* root, int value) {
    root->right = createnode(value);
    return root->right;
}


void preorderTraversal(struct node* root) {
    if (root == NULL) {
        return;
    }
    preorderTraversal(root->left);    
    printf("%d ", root->item);      
    preorderTraversal(root->right);   
}

int main() {
    struct node* root = createnode(1);   
    insertLeft(root, 2);        
    insertRight(root, 3);                
    insertLeft(root->left, 4);          

    
    printf("pre-order Traversal of the Tree: ");
    preorderTraversal(root);
    printf("\n");

    return 0;
}
